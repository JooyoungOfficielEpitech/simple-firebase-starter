const en = {
  common: {
    ok: "OK!",
    cancel: "Cancel",
    back: "Back",
  },
  welcomeScreen: {
    postscript:
      "psst  â€” This probably isn't what your app looks like. (Unless your designer handed you these screens, and in that case, ship it!)",
    readyForLaunch: "Your app, almost ready for launch!",
    exciting: "(ohh, this is exciting!)",
  },
  mainNavigator: {
    welcomeTab: "Home",
    settingsTab: "Settings",
  },
  matchingScreen: {
    matchingButton: "Start Matching",
  },
  signInScreen: {
    title: "Welcome to Amie",
    subtitle: "Sign in to your account",
    emailPlaceholder: "Email",
    passwordPlaceholder: "Password",
    signInButton: "Sign In",
    forgotPasswordButton: "Forgot Password?",
    googleButton: "Continue with Google",
    switchToSignUp: "Don't have an account? Sign Up",
    errorTitle: "Error",
    authFailed: "Authentication failed.",
    googleFailed: "Google sign in failed.",
  },
  signUpScreen: {
    title: "Sign Up",
    subtitle: "Create a new account",
    namePlaceholder: "Name",
    emailPlaceholder: "Email",
    passwordPlaceholder: "Password",
    signUpButton: "Sign Up",
    googleButton: "Continue with Google",
    backToSignIn: "Already have an account? Sign In",
    errorTitle: "Error",
    signUpFailed: "Sign up failed.",
    googleFailed: "Google sign in failed.",
    signUpSuccess: "Sign Up Successful",
    emailVerificationMessage: "Please check your email to verify your account.",
  },
  forgotPasswordScreen: {
    title: "Reset Password",
    subtitle: "Enter your email address and we'll send you a link to reset your password.",
    subtitleSent: "We've sent you a password reset link!",
    emailPlaceholder: "Email",
    sendButton: "Send Reset Link",
    resendButton: "Resend Email",
    backToSignIn: "Back to Sign In",
    checkEmail:
      "Check your email and click the link to reset your password. If you don't see the email, check your spam folder.",
    successTitle: "Email Sent",
    successMessage: "We've sent a password reset link to your email address.",
    errorTitle: "Error",
    sendFailed: "Failed to send reset email. Please try again.",
    emailNotEligible:
      "This email is not eligible for password reset. Please use the same sign-in method you used when registering.",
  },
  auth: {
    validation: {
      emailRequired: "Please enter your email",
      emailMinLength: "Email must be at least 6 characters long",
      emailInvalid: "Please enter a valid email address",
      passwordRequired: "Please enter your password",
      passwordMinLength: "Password must be at least 6 characters long",
      passwordPattern: "Password must contain letters, numbers, and special characters",
      passwordMismatch: "Passwords do not match",
      nameRequired: "Please enter your name",
      nameMinLength: "Name must be at least 2 characters long",
      nameMaxLength: "Name must be no more than 20 characters",
      namePattern: "Name can only contain Korean, English letters, and spaces",
      inputValidation: "Please check your input information",
    },
    errors: {
      signInFailed: "Sign in failed",
      signUpFailed: "Sign up failed",
      googleSignInFailed: "Google sign in failed",
      signInInProgress: "Sign in operation is already in progress",
      playServicesNotAvailable: "Google Play Services not available or outdated",
      logoutFailed: "Logout failed",
      userNotFound: "User not found",
      emailVerificationFailed: "Failed to send verification email",
      reloadFailed: "Failed to reload user information",
      emailUpdateFailed: "Failed to update email address",
    },
  },
  errorScreen: {
    title: "Something went wrong!",
    friendlySubtitle:
      "This is the screen that your users will see in production when an error is thrown. You'll want to customize this message (located in `app/i18n/en.ts`) and probably the layout as well (`app/screens/ErrorScreen`). If you want to remove this entirely, check `app/app.tsx` for the <ErrorBoundary> component.",
    reset: "RESET APP",
  },
  emptyStateComponent: {
    generic: {
      heading: "So empty... so sad",
      content: "No data found yet. Try clicking the button to refresh or reload the app.",
      button: "Let's try this again",
    },
  },
  profile: {
    validation: {
      nameRequired: "Name is required.",
      nameMinLength: "Name must be at least 2 characters long.",
      ageRequired: "Age is required.",
      ageMin: "Age must be at least {{minAge}} years old.",
      ageMax: "Age must be no more than {{maxAge}} years old.",
      genderRequired: "Gender is required.",
      genderInvalid: "Invalid gender.",
      locationRequired: "Location information is required.",
      locationInvalid: "Invalid location information.",
      latitudeInvalid: "Invalid latitude.",
      longitudeInvalid: "Invalid longitude.",
      photosRequired: "Profile photos are required.",
      photosMin: "At least {{minPhotos}} profile photos are required.",
      photosMax: "You can upload up to {{maxPhotos}} profile photos.",
      mainPhotoRequired: "Please set a main photo.",
      mainPhotoSingle: "Only one main photo can be set.",
      photoOrderInvalid: "Photo order is incorrect.",
      bioMaxLength: "Bio must be no more than {{maxLength}} characters.",
      interestsMax: "You can set up to {{maxInterests}} interests.",
      ageRangeInvalid: "Age range is invalid.",
      ageRangeLogic: "Minimum age must be less than maximum age.",
      maxDistanceInvalid: "Maximum distance must be greater than 0.",
      genderPreferenceRequired: "Please select preferred gender.",
    },
    warnings: {
      bioEmpty: "Adding a bio will increase your matching probability.",
      bioShort: "Writing a more detailed bio will increase your matching probability.",
      interestsEmpty: "Setting interests will increase your matching probability.",
    },
  },
  matching: {
    status: {
      pending: "Waiting for match",
      active: "Match in progress",
      ended: "Match ended",
      cancelled: "Match cancelled",
    },
    types: {
      random: "Random match",
      preference: "Preference-based match",
      super_like: "Super like match",
    },
    errors: {
      userNotFound: "User not found",
      matchingFailed: "Matching failed",
      alreadyMatched: "Already matched with this user",
      matchNotFound: "Match not found",
      matchExpired: "Match has expired",
      matchCancelled: "Match was cancelled",
      invalidMatchStatus: "Invalid match status",
      queueFull: "Matching queue is full",
      noAvailableUsers: "No available users for matching",
      distanceTooFar: "User is too far away",
      ageMismatch: "Age does not match preferences",
      genderMismatch: "Gender does not match preferences",
      userBlocked: "User is blocked",
      userInactive: "User is inactive",
      profileIncomplete: "Profile is incomplete",
      alreadyInQueue: "Already in matching queue",
      notInQueue: "Not in matching queue",
      queueTimeout: "Queue timeout",
      matchLimitReached: "Match limit reached",
      cooldownActive: "Matching cooldown is active",
      alreadyInChat:
        "You are already in a chat with another user. Please end the current chat before starting a new one.",
      otherUserInChat: "The other user is already in a chat with someone else.",
      profileNotFound: "User profile not found",
    },
    messages: {
      matchFound: "Match found!",
      matchStarted: "Match started!",
      matchEnded: "Match ended",
      matchCancelled: "Match cancelled",
      waitingForMatch: "Waiting for match...",
      searchingForMatch: "Searching for match...",
      noMatchFound: "No match found",
      matchExpired: "Match expired",
      userLeft: "User left the match",
      userInactive: "User became inactive",
      matchSuccess: "Match successful!",
      matchFailed: "Match failed",
      queueJoined: "Joined matching queue",
      queueLeft: "Left matching queue",
      queuePosition: "Position in queue: {{position}}",
      estimatedWaitTime: "Estimated wait time: {{time}} minutes",
      alreadyInChat: "Already in active chat:",
    },
    actions: {
      startMatching: "Start Matching",
      stopMatching: "Stop Matching",
      acceptMatch: "Accept Match",
      declineMatch: "Decline Match",
      endMatch: "End Match",
      reportUser: "Report User",
      blockUser: "Block User",
      unblockUser: "Unblock User",
      viewProfile: "View Profile",
      sendMessage: "Send Message",
      rateMatch: "Rate Match",
    },
    settings: {
      title: "Matching Settings",
      maxDistance: "Maximum Distance",
      ageRange: "Age Range",
      genderPreference: "Gender Preference",
      matchingDuration: "Matching Duration",
      autoMatch: "Auto Match",
      notifications: "Notifications",
      privacy: "Privacy",
    },
    stats: {
      totalMatches: "Total Matches",
      successfulMatches: "Successful Matches",
      averageDuration: "Average Duration",
      matchRate: "Match Rate",
      todayMatches: "Today's Matches",
      weeklyMatches: "Weekly Matches",
      monthlyMatches: "Monthly Matches",
    },
  },
  emailVerificationScreen: {
    title: "Verify Your Email",
    subtitle: "We've sent a verification link to {{email}}",
    checkEmailMessage:
      "Please check your email and click the verification link to activate your account.",
    instructionsMessage: "If you don't see the email, check your spam folder or request a new one.",
    currentEmail: "Current Email",
    openEmailApp: "Open Email App",
    checkVerification: "I've Verified My Email",
    resendEmail: "Resend Verification Email",
    resendCountdown: "Resend in {{countdown}}s",
    changeEmail: "Change Email Address",
    logout: "Sign Out",

    // Email change related
    changeEmailTitle: "Change Email Address",
    newEmailLabel: "New Email Address",
    newEmailPlaceholder: "Enter new email address",
    cancelChange: "Cancel",
    confirmChange: "Change Email",

    // Messages
    verificationComplete: "Email Verified!",
    welcomeMessage: "Welcome to Amie! You can now use all features.",
    resendTitle: "Verification Email Sent",
    resendMessage: "We've sent a new verification email to {{email}}",
    emailChangeSuccess: "Email Changed",
    emailChangeMessage: "We've sent a verification email to {{email}}",

    // Error messages
    errorTitle: "Error",
    resendFailed: "Failed to resend verification email",
    checkFailed: "Failed to check verification status",
    emailAppError: "Unable to open email app",
    emailRequired: "Email address is required",
    invalidEmail: "Please enter a valid email address",
    emailChangeFailed: "Failed to change email address",

    // Status messages
    notVerifiedTitle: "Email Not Yet Verified",
    notVerifiedMessage: "Please click the verification link in your email first.",
  },
}

export default en
export type Translations = typeof en
