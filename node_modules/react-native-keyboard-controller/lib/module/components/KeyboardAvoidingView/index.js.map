{"version":3,"names":["React","forwardRef","useCallback","useMemo","View","Reanimated","interpolate","runOnUI","useAnimatedStyle","useDerivedValue","useSharedValue","useWindowDimensions","useKeyboardAnimation","useTranslateAnimation","defaultLayout","x","y","width","height","KeyboardAvoidingView","behavior","children","contentContainerStyle","enabled","keyboardVerticalOffset","style","onLayout","onLayoutProps","props","ref","initialFrame","frame","value","translate","padding","keyboard","screenHeight","relativeKeyboardHeight","keyboardY","heightWhenOpened","Math","max","interpolateToRelativeKeyboardHeight","onLayoutWorklet","layout","isClosed","e","nativeEvent","animatedStyle","bottom","progress","translateY","paddingBottom","flex","paddingTop","transform","isPositionBehavior","containerStyle","combinedStyles","createElement","_extends"],"sources":["index.tsx"],"sourcesContent":["import React, { forwardRef, useCallback, useMemo } from \"react\";\nimport { View } from \"react-native\";\nimport Reanimated, {\n  interpolate,\n  runOnUI,\n  useAnimatedStyle,\n  useDerivedValue,\n  useSharedValue,\n} from \"react-native-reanimated\";\n\nimport { useWindowDimensions } from \"../../hooks\";\n\nimport { useKeyboardAnimation, useTranslateAnimation } from \"./hooks\";\n\nimport type { LayoutRectangle, ViewProps } from \"react-native\";\n\nexport type KeyboardAvoidingViewBaseProps = {\n  /**\n   * Controls whether this `KeyboardAvoidingView` instance should take effect.\n   * This is useful when more than one is on the screen. Defaults to true.\n   */\n  enabled?: boolean;\n\n  /**\n   * Distance between the top of the user screen and the React Native view. This\n   * may be non-zero in some cases. Defaults to 0.\n   */\n  keyboardVerticalOffset?: number;\n} & ViewProps;\n\nexport type KeyboardAvoidingViewProps = KeyboardAvoidingViewBaseProps &\n  (\n    | {\n        /**\n         * Specify how to react to the presence of the keyboard.\n         */\n        behavior?: \"position\";\n\n        /**\n         * Style of the content container when `behavior` is 'position'.\n         */\n        contentContainerStyle?: ViewProps[\"style\"];\n      }\n    | {\n        /**\n         * Specify how to react to the presence of the keyboard.\n         */\n        behavior?: \"height\" | \"padding\" | \"translate-with-padding\";\n\n        /**\n         * `contentContainerStyle` is not allowed for these behaviors.\n         */\n        contentContainerStyle?: never;\n      }\n  );\n\nconst defaultLayout: LayoutRectangle = {\n  x: 0,\n  y: 0,\n  width: 0,\n  height: 0,\n};\n\n/**\n * A View component that automatically adjusts its height, position, or bottom padding\n * when the keyboard appears to ensure that the content remains visible.\n *\n * @returns A View component that adjusts to keyboard visibility.\n * @see {@link https://kirillzyusko.github.io/react-native-keyboard-controller/docs/api/components/keyboard-avoiding-view|Documentation} page for more details.\n * @example\n * ```tsx\n * <KeyboardAvoidingView behavior=\"padding\">\n *   <TextInput />\n * </KeyboardAvoidingView>\n * ```\n */\nconst KeyboardAvoidingView = forwardRef<\n  View,\n  React.PropsWithChildren<KeyboardAvoidingViewProps>\n>(\n  (\n    {\n      behavior,\n      children,\n      contentContainerStyle,\n      enabled = true,\n      keyboardVerticalOffset = 0,\n      style,\n      onLayout: onLayoutProps,\n      ...props\n    },\n    ref,\n  ) => {\n    const initialFrame = useSharedValue<LayoutRectangle | null>(null);\n    const frame = useDerivedValue(() => initialFrame.value || defaultLayout);\n\n    const { translate, padding } = useTranslateAnimation();\n    const keyboard = useKeyboardAnimation();\n    const { height: screenHeight } = useWindowDimensions();\n\n    const relativeKeyboardHeight = useCallback(() => {\n      \"worklet\";\n\n      const keyboardY =\n        screenHeight - keyboard.heightWhenOpened.value - keyboardVerticalOffset;\n\n      return Math.max(frame.value.y + frame.value.height - keyboardY, 0);\n    }, [screenHeight, keyboardVerticalOffset]);\n    const interpolateToRelativeKeyboardHeight = useCallback(\n      (value: number) => {\n        \"worklet\";\n\n        return interpolate(value, [0, 1], [0, relativeKeyboardHeight()]);\n      },\n      [relativeKeyboardHeight],\n    );\n\n    const onLayoutWorklet = useCallback(\n      (layout: LayoutRectangle) => {\n        \"worklet\";\n\n        if (\n          keyboard.isClosed.value ||\n          initialFrame.value === null ||\n          behavior !== \"height\"\n        ) {\n          // eslint-disable-next-line react-compiler/react-compiler\n          initialFrame.value = layout;\n        }\n      },\n      [behavior],\n    );\n    const onLayout = useCallback<NonNullable<ViewProps[\"onLayout\"]>>(\n      (e) => {\n        runOnUI(onLayoutWorklet)(e.nativeEvent.layout);\n        onLayoutProps?.(e);\n      },\n      [onLayoutProps],\n    );\n\n    const animatedStyle = useAnimatedStyle(() => {\n      if (!enabled) {\n        return {};\n      }\n\n      const bottom = interpolateToRelativeKeyboardHeight(\n        keyboard.progress.value,\n      );\n      const translateY = interpolateToRelativeKeyboardHeight(translate.value);\n      const paddingBottom = interpolateToRelativeKeyboardHeight(padding.value);\n      const height = frame.value.height - bottom;\n\n      switch (behavior) {\n        case \"height\":\n          if (!keyboard.isClosed.value && height > 0) {\n            return {\n              height,\n              flex: 0,\n            };\n          }\n\n          return {};\n\n        case \"position\":\n          return { bottom };\n\n        case \"padding\":\n          return { paddingBottom: bottom };\n\n        case \"translate-with-padding\":\n          return {\n            paddingTop: paddingBottom,\n            transform: [{ translateY: -translateY }],\n          };\n\n        default:\n          return {};\n      }\n    }, [behavior, enabled, interpolateToRelativeKeyboardHeight]);\n    const isPositionBehavior = behavior === \"position\";\n    const containerStyle = isPositionBehavior ? contentContainerStyle : style;\n    const combinedStyles = useMemo(\n      () => [containerStyle, animatedStyle],\n      [containerStyle, animatedStyle],\n    );\n\n    if (isPositionBehavior) {\n      return (\n        <View ref={ref} style={style} onLayout={onLayout} {...props}>\n          <Reanimated.View style={combinedStyles}>{children}</Reanimated.View>\n        </View>\n      );\n    }\n\n    return (\n      <Reanimated.View\n        ref={ref}\n        style={combinedStyles}\n        onLayout={onLayout}\n        {...props}\n      >\n        {children}\n      </Reanimated.View>\n    );\n  },\n);\n\nexport default KeyboardAvoidingView;\n"],"mappings":"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","ignoreList":[]}